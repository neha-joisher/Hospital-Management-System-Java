/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CredentialDirectory;
import model.MainSystem;
import model.City;
import UI.MainJFrame;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.SwingUtilities;
import model.Community;
import model.House;
import model.Crudops;
import model.Hospital;
/**
 *
 * @author nehajoisher
 */
public class CityAdminCreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CityAdminCreateJPanel
     */
    City city1;
    Crudops crudops1;
    MainSystem mainSystem;
    CredentialDirectory allcredentials;
    public CityAdminCreateJPanel(MainSystem mainSystem,CredentialDirectory allcredentials) {
        initComponents();
        this.crudops1 = crudops1;
        this.allcredentials = allcredentials;
        this.mainSystem = mainSystem;
        
        try{
        
            popcomm();
            popcity();
            popcity1();
        }
        catch(Exception e){
        }
        
        
        try{
            if(allcredentials.getCredential().get(allcredentials.getCredential().size()-1).getRole().equals("Community Admin")){
                btncreate.setVisible(false);
            }
        }
        catch(Exception e){

        }

                
    }
    public void setLabelText() {
        jLabel1.setText("Welcome Community Admin");
    }
    
    public boolean rolecheck(){
        MainJFrame mj = new MainJFrame();
        String password;
        String username;
        String role;
        password = "admin";
        username = "admin";
        role = mj.getrole();
        boolean b1 =  allcredentials.checkSysAdminCred(username, password, role);
        
        return b1;
    }

    public boolean IdCheck(int id){
        boolean b1 = false;
        //city
        ArrayList<City> idcheck = mainSystem.searchCity(txtCity.getText());
        if(idcheck.contains(Integer.valueOf(id))){
            return false;
        }else{
            return true;
        }
    }    
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCityid = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCommunityid = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblHouseNo = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCityid = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtCommunityid = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        txtHouseno = new javax.swing.JTextField();
        btncreate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        lblHouseNo1 = new javax.swing.JLabel();
        txtHouseno1 = new javax.swing.JTextField();
        txtHouse1 = new javax.swing.JTextField();
        lblHouse1 = new javax.swing.JLabel();
        lblCommunity1 = new javax.swing.JLabel();
        txtCommunity1 = new javax.swing.JTextField();
        txtCommunityid1 = new javax.swing.JTextField();
        lblCommunityid1 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        lblCity1 = new javax.swing.JLabel();
        txtCityid1 = new javax.swing.JTextField();
        lblCityid1 = new javax.swing.JLabel();
        btnedit = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnpop = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRecords1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRecords2 = new javax.swing.JTable();
        btncreate1 = new javax.swing.JButton();
        btnview1 = new javax.swing.JButton();
        btnpop1 = new javax.swing.JButton();
        btndelete1 = new javax.swing.JButton();
        btnpop2 = new javax.swing.JButton();
        btndelete2 = new javax.swing.JButton();
        btnview2 = new javax.swing.JButton();
        btnedit1 = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxCity = new javax.swing.JComboBox<>();
        lblCommunity2 = new javax.swing.JLabel();
        ComboBoxCity1 = new javax.swing.JComboBox<>();
        lblCommunity3 = new javax.swing.JLabel();
        ComboBoxComm = new javax.swing.JComboBox<>();
        lblCommunity4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setForeground(new java.awt.Color(153, 255, 51));
        setToolTipText("");
        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("City and Community");

        lblCity.setText("City ");

        lblCityid.setText("CityID");

        lblCommunity.setText("Community");

        lblCommunityid.setText("CommunityID");

        lblHouse.setText("House");

        lblHouseNo.setText("House Number");

        txtCityid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCityidKeyTyped(evt);
            }
        });

        txtCommunityid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommunityidKeyTyped(evt);
            }
        });

        txtHouseno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHousenoKeyTyped(evt);
            }
        });

        btncreate.setText("Create");
        btncreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateActionPerformed(evt);
            }
        });

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "City", "CityId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        lblHouseNo1.setText("House Number");

        txtHouseno1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHouseno1KeyTyped(evt);
            }
        });

        lblHouse1.setText("House");

        lblCommunity1.setText("Community");

        txtCommunityid1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommunityid1KeyTyped(evt);
            }
        });

        lblCommunityid1.setText("CommunityID");

        lblCity1.setText("City ");

        txtCityid1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCityid1KeyTyped(evt);
            }
        });

        lblCityid1.setText("CityID");

        btnedit.setText("Save");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnpop.setText("Populate table");
        btnpop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpopActionPerformed(evt);
            }
        });

        tblRecords1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House", "HouseId", "Community", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRecords1);

        tblRecords2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Community", "CommunityId", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRecords2);

        btncreate1.setText("Create");
        btncreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreate1ActionPerformed(evt);
            }
        });

        btnview1.setText("View");
        btnview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnview1ActionPerformed(evt);
            }
        });

        btnpop1.setText("Populate table");
        btnpop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpop1ActionPerformed(evt);
            }
        });

        btndelete1.setText("Delete");
        btndelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelete1ActionPerformed(evt);
            }
        });

        btnpop2.setText("Populate table");
        btnpop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpop2ActionPerformed(evt);
            }
        });

        btndelete2.setText("Delete");
        btndelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelete2ActionPerformed(evt);
            }
        });

        btnview2.setText("View");
        btnview2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnview2ActionPerformed(evt);
            }
        });

        btnedit1.setText("Save");
        btnedit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnedit1ActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel2.setText("Select Data to View and/or delete");

        ComboBoxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCityActionPerformed(evt);
            }
        });

        lblCommunity2.setText("City");

        lblCommunity3.setText("City");

        lblCommunity4.setText("Community");

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity)
                                            .addComponent(lblCityid))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCityid, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btncreate))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(310, 310, 310)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCityid1)
                                                            .addComponent(lblCity1))
                                                        .addGap(38, 38, 38)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtCityid1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(57, 57, 57)
                                                        .addComponent(btnedit))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnpop)
                                                .addGap(37, 37, 37)
                                                .addComponent(btnview))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(71, 71, 71)
                                                .addComponent(btndelete)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(109, 109, 109)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCommunityid1)
                                                            .addComponent(lblCommunity1))
                                                        .addGap(38, 38, 38)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(3, 3, 3)
                                                                .addComponent(txtCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(txtCommunityid1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(btnedit1))
                                                                .addGap(3, 3, 3))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(btnpop1)
                                                        .addGap(37, 37, 37)
                                                        .addComponent(btnview1))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCommunityid)
                                                            .addComponent(lblCommunity)
                                                            .addComponent(lblCommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txtCommunityid)
                                                            .addComponent(txtCommunity)
                                                            .addComponent(ComboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jButton1)))
                                                .addGap(21, 21, 21))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btndelete1)
                                                .addGap(98, 98, 98)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(Save))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblHouse1)
                                            .addComponent(lblHouseNo1))
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtHouseno1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtHouse1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnpop2)
                                                .addGap(37, 37, 37)
                                                .addComponent(btnview2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(97, 97, 97)
                                                .addComponent(btndelete2))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblCommunity3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ComboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblHouse)
                                                .addGap(81, 81, 81)
                                                .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ComboBoxComm, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblHouseNo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtHouseno, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(btncreate1))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(365, 365, 365)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(584, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtCityid});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete, btnpop, btnview});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete1, btnpop1, btnview1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btndelete2, btnpop2, btnview2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btncreate))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCity)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCityid)
                                    .addComponent(txtCityid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ComboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCommunity2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCommunity)
                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunityid)
                            .addComponent(txtCommunityid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCommunity3)
                                    .addComponent(ComboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCommunity4)
                                        .addComponent(jButton1))
                                    .addComponent(ComboBoxComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btncreate1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouse)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouseNo)
                            .addComponent(txtHouseno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnview)
                            .addComponent(btnpop))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnview1)
                            .addComponent(btnpop1))
                        .addGap(18, 18, 18)
                        .addComponent(btndelete1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnview2)
                            .addComponent(btnpop2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndelete2)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCommunity1)
                                .addGap(30, 30, 30)
                                .addComponent(lblCommunityid1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(txtCommunityid1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnedit1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(txtCityid1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCity1)
                                .addGap(27, 27, 27)
                                .addComponent(lblCityid1)
                                .addGap(3, 3, 3)))
                        .addGap(18, 18, 18)
                        .addComponent(btnedit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHouse1)
                                .addGap(30, 30, 30)
                                .addComponent(lblHouseNo1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtHouse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(txtHouseno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btncreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateActionPerformed
        // TODO add your handling code here:
        if(txtCity.getText().length() != 0 || txtCityid.getText().length() != 0)
        {        
            String City = txtCity.getText();
            int Cityid  = Integer.valueOf(txtCityid.getText());
            City newCity = mainSystem.addnewCity();

            if(mainSystem.checkCityid(Cityid)){
                JOptionPane.showMessageDialog(this,"The ID is already taken");
            }else{
                txtCity.setText("");
                txtCityid.setText("");

                newCity.setCityname(City);
                newCity.setCityId(Cityid);        
                popcity();
                popcity1();
                popTable();
            }
           
        }else{
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields");  
        }    

    }//GEN-LAST:event_btncreateActionPerformed

    private void btnpopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpopActionPerformed
        // TODO add your handling code here:
        popTable();

    }//GEN-LAST:event_btnpopActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            DefaultTableModel m2 = (DefaultTableModel)tblRecords.getModel();
            City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);   

            txtCity1.setText(SelectedRecords.getCityname());
            txtCityid1.setText(String.valueOf(SelectedRecords.getCityId()));
        }
    }//GEN-LAST:event_btnviewActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:

        boolean b1 = rolecheck();
        System.out.println("ONLY ADMIN CAN DO THIS " + b1);
        int SelectedRow = tblRecords.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if(b1){
            DefaultTableModel m2 = (DefaultTableModel)tblRecords.getModel();
            City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);   
            mainSystem.deleteCity(SelectedRecords);        
            JOptionPane.showMessageDialog(this,"Selected row has been deleted");
            popTable(); 
            popTable2();
            popTable3();
        }
  
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        
    int SelectedRow = tblRecords.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            if(txtCity1.getText().length() != 0 || txtCityid1.getText().length() != 0 )
            {            
                DefaultTableModel m2 = (DefaultTableModel)tblRecords.getModel();
                City SelectedRecords = (City) m2.getValueAt(SelectedRow, 0);
                ArrayList<City> results = this.mainSystem.searchCity(SelectedRecords.getCityname());
                if(mainSystem.checkCityid(Integer.valueOf(txtCityid1.getText()))){
                    JOptionPane.showMessageDialog(this, "The input Id is already in use");
                }else{
                    results.get(0).setCityname(txtCity1.getText());
                    results.get(0).setCityId(Integer.valueOf(txtCityid1.getText()));                        
                    JOptionPane.showMessageDialog(this, "Data has been updated"); 
                    popTable();
                }

            }else{
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");  
            }    
   
        }        
    }//GEN-LAST:event_btneditActionPerformed

    private void btncreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreate1ActionPerformed
        // TODO add your handling code here:
        if(ComboBoxCity1.getSelectedItem().toString().length() ==0 ){
            JOptionPane.showMessageDialog(this, "Please Create a City");
        }else{
            if(txtHouse.getText().length() != 0 || txtHouseno.getText().length()!=0 || ComboBoxCity1.getSelectedItem().toString().length() != 0 || ComboBoxComm.getSelectedItem().toString().length() != 0 ){
                String Houseadd = txtHouse.getText();
                int Houseid = Integer.valueOf(txtHouseno.getText());
                //House hse = mainSystem.addnewCity().addCommunity().addNewHouse();

                for(City ct1 : mainSystem.getAllcities()){
                    for(Community com1 : ct1.getAllcommunities()){
                        if(com1.checkhouseid(Houseid)){
                            JOptionPane.showMessageDialog(this,"The input Id is already in use");
                        }else{
                            Community comm = new Community();
                            House hse = com1.addNewHouse();
                            hse.setHouseno(Houseid);
                            hse.setAddress(Houseadd); 
                            comm.setCommunityname(ComboBoxComm.getSelectedItem().toString());
                            hse.setCommunity(comm);    
                            txtHouse.setText("");
                            txtHouseno.setText("");    
                            popcomm();
                            popcity1(); 
                            popTable3();
                        }

                    }
                }        


            }else{
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");  
            }            
        }

  
                
    }//GEN-LAST:event_btncreate1ActionPerformed

    private void btnview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnview1ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords2.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            DefaultTableModel m2 = (DefaultTableModel)tblRecords2.getModel();
            //System.out.println(m2);
            //MainSystem a = new MainSystem();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
            //System.out.println("THIS IS THE SELECTED ROW"+SelectedRecords);        
            txtCommunity1.setText(SelectedRecords.getCommunityname());
            txtCommunityid1.setText(String.valueOf(SelectedRecords.getZipcode()));
            
        }        
    }//GEN-LAST:event_btnview1ActionPerformed

    private void btnpop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpop1ActionPerformed
        // TODO add your handling code here:
        popTable2();
    }//GEN-LAST:event_btnpop1ActionPerformed

    private void btndelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelete1ActionPerformed
        // TODO add your handling code here:
        boolean b1 = rolecheck();
        System.out.println("ONLY ADMIN CAN DO THIS " + b1);
        int SelectedRow = tblRecords2.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if(b1){
            DefaultTableModel m2 = (DefaultTableModel)tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);   
            for(City ct1 : mainSystem.getAllcities()){
                ct1.deleteCommunity(SelectedRecords);
            }
            JOptionPane.showMessageDialog(this,"Selected row has been deleted");
            popTable2();
            popTable3();
        }        
    }//GEN-LAST:event_btndelete1ActionPerformed

    private void btnpop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpop2ActionPerformed
        // TODO add your handling code here:
        popTable3();
    }//GEN-LAST:event_btnpop2ActionPerformed

    private void btndelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelete2ActionPerformed
        // TODO add your handling code here:
        boolean b1 = rolecheck();
        System.out.println("ONLY ADMIN CAN DO THIS " + b1);
        int SelectedRow = tblRecords2.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        if(b1){
            DefaultTableModel m2 = (DefaultTableModel)tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);   
            for(City ct1 : mainSystem.getAllcities()){
                for (Community ct2 : ct1.getAllcommunities()){
                    for(House ct3 : ct2.getAllhouses()){
                        ct3.deleteHouse(ct3);
                        
                    }
                }
            }
            JOptionPane.showMessageDialog(this,"Selected row has been deleted");
            popTable3();                  
        }                
        
    }//GEN-LAST:event_btndelete2ActionPerformed

    private void btnview2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnview2ActionPerformed
        // TODO add your handling code here:
        int SelectedRow = tblRecords1.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            DefaultTableModel m2 = (DefaultTableModel)tblRecords1.getModel();
            //System.out.println(m2);
            House SelectedRecords = (House) m2.getValueAt(SelectedRow, 0);
            //System.out.println("THIS IS THE SELECTED ROW"+SelectedRecords);        

            txtHouse1.setText(SelectedRecords.getAddress());
            txtHouseno1.setText(String.valueOf(SelectedRecords.getHouseno()));
        }        
        
    }//GEN-LAST:event_btnview2ActionPerformed

    private void btnedit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedit1ActionPerformed
        // TODO add your handling code here:
    int SelectedRow = tblRecords2.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            if(txtCommunity1.getText().length() != 0 || txtCommunityid1.getText().length() != 0)
            {            
            DefaultTableModel m2 = (DefaultTableModel)tblRecords2.getModel();
            Community SelectedRecords = (Community) m2.getValueAt(SelectedRow, 0);
            
            for(City ct1 : mainSystem.getAllcities()){
                if(ct1.checkcommid(Integer.valueOf(txtCommunityid1.getText()))){
                    JOptionPane.showMessageDialog(this, "The input Id is already in use");
                }else{
                    ArrayList<Community> searchComm = ct1.searchCommunity(SelectedRecords.getCommunityname());
                    System.out.println("Search Param "+ searchComm.size());
                    searchComm.get(0).setCommunityname(txtCommunity1.getText());
                    searchComm.get(0).setZipcode(Integer.valueOf(txtCommunityid1.getText()));                    
                }

            }            

//            SelectedRecords.getHse().setHouseno(Integer.valueOf(txtCityid1.getText()));                            
            JOptionPane.showMessageDialog(this, "Data has been updated");    
            
            }else{
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields");    

            }
  
        }            
    }//GEN-LAST:event_btnedit1ActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
    int SelectedRow = tblRecords1.getSelectedRow();
        if(SelectedRow<0){
            JOptionPane.showMessageDialog(this, "Please Select a row");
        }else{
            if(txtHouse1.getText().length() != 0 || txtHouseno1.getText().length() != 0){
            DefaultTableModel m2 = (DefaultTableModel)tblRecords1.getModel();
            //System.out.println(m2);
            House SelectedRecords = (House) m2.getValueAt(SelectedRow, 0);
            //ArrayList<House> searchHouse = new ArrayList();
            for(City ct1 : mainSystem.getAllcities()){
                for(Community cm :ct1.getAllcommunities()){
                    if(cm.getCommunityname().equals(SelectedRecords.getCommunity().getCommunityname())){
                        if(cm.checkhouseid(Integer.valueOf(txtHouseno1.getText()))){
                            JOptionPane.showMessageDialog(this, "The input Id is already in use");
                        }else{
                            ArrayList<House> searchHouse = cm.searchHouse(SelectedRecords.getAddress());
                            System.out.println("SIZE  "+ searchHouse.size());
                            searchHouse.get(0).setAddress(txtHouse1.getText());
                            Community cm1 = new Community();
                            cm1.setCommunityname(SelectedRecords.getCommunity().getCommunityname());
                            searchHouse.get(0).setCommunity(cm1);
                            searchHouse.get(0).setHouseno(Integer.valueOf(txtHouseno1.getText()));                             
                        }

                    }
                }        
            }            

//            SelectedRecords.getHse().setHouseno(Integer.valueOf(txtCityid1.getText()));                            
            JOptionPane.showMessageDialog(this, "Data has been updated");                      
                
            }else{
                JOptionPane.showMessageDialog(this, "Please Fill All The Fields");  
            }

        }                    
        
    }//GEN-LAST:event_SaveActionPerformed

    private void txtCityidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityidKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtCityidKeyTyped

    private void txtCommunityidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommunityidKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtCommunityidKeyTyped

    private void txtHousenoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHousenoKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtHousenoKeyTyped

    private void txtCityid1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityid1KeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtCityid1KeyTyped

    private void txtCommunityid1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommunityid1KeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtCommunityid1KeyTyped

    private void txtHouseno1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseno1KeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }        
    }//GEN-LAST:event_txtHouseno1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(txtCommunity.getText().length() != 0 || txtCommunityid.getText().length()!=0 || ComboBoxCity.getSelectedItem().toString().length() != 0 ) 
        {        
            
            
            
            String Comm = txtCommunity.getText();
            int Commid = Integer.valueOf(txtCommunityid.getText());
            //Community comm = mainSystem.addnewCity().addCommunity();
            for(City ct1 : mainSystem.getAllcities()){
                if(ct1.checkcommid(Commid)){
                    JOptionPane.showMessageDialog(this, "The Community ID is already in use");
                }else{
                    Community comm = ct1.addCommunity();
                    comm.setCommunityname(Comm);
                    comm.setZipcode(Commid);       
                    City ct = new City();
                    ct.setCityname(ComboBoxCity.getSelectedItem().toString());
                    comm.setCity(ct);             
                    txtCommunityid.setText("");   
                    txtCommunity.setText("");  
                    popTable2();
                    popcomm();
                    popcity1();                 
                }

            }


        }
        else{
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ComboBoxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCity;
    private javax.swing.JComboBox<String> ComboBoxCity1;
    private javax.swing.JComboBox<String> ComboBoxComm;
    private javax.swing.JButton Save;
    private javax.swing.JButton btncreate;
    private javax.swing.JButton btncreate1;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btndelete1;
    private javax.swing.JButton btndelete2;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnedit1;
    private javax.swing.JButton btnpop;
    private javax.swing.JButton btnpop1;
    private javax.swing.JButton btnpop2;
    private javax.swing.JButton btnview;
    private javax.swing.JButton btnview1;
    private javax.swing.JButton btnview2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblCityid;
    private javax.swing.JLabel lblCityid1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunity1;
    private javax.swing.JLabel lblCommunity2;
    private javax.swing.JLabel lblCommunity3;
    private javax.swing.JLabel lblCommunity4;
    private javax.swing.JLabel lblCommunityid;
    private javax.swing.JLabel lblCommunityid1;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblHouse1;
    private javax.swing.JLabel lblHouseNo;
    private javax.swing.JLabel lblHouseNo1;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTable tblRecords1;
    private javax.swing.JTable tblRecords2;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtCityid;
    private javax.swing.JTextField txtCityid1;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtCommunity1;
    private javax.swing.JTextField txtCommunityid;
    private javax.swing.JTextField txtCommunityid1;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtHouse1;
    private javax.swing.JTextField txtHouseno;
    private javax.swing.JTextField txtHouseno1;
    // End of variables declaration//GEN-END:variables

    private void popTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel)tblRecords.getModel();
        m1.setRowCount(0);
        for(City Cs: this.mainSystem.getAllcities()){
           Object[] row = new Object[2];
           row[0] = Cs;
           row[1] = Cs.getCityId();
           m1.addRow(row);
        }
    }

    private void popTable2() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel)tblRecords2.getModel();
        m1.setRowCount(0);
        for(City Cs: this.mainSystem.getAllcities()){
            for(Community Cs1 :Cs.getAllcommunities()){
                Object[] row = new Object[3];
                row[0] = Cs1;
                row[1] = Cs1.getZipcode();
                row[2] = Cs1.getCity().getCityname();
                m1.addRow(row);
            }
        }
    }

    private void popTable3() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        tblRecords1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        DefaultTableModel m1 = (DefaultTableModel)tblRecords1.getModel();
        m1.setRowCount(0);
        
        for(City Cs: this.mainSystem.getAllcities()){
            Object[] row = new Object[4];
            row[3] = Cs.getCityname();
            for(Community Cs1 :Cs.getAllcommunities()){
                for(House Cs2 :Cs1.getAllhouses()){
                    if(Cs1.getCommunityname()==Cs2.getCommunity().getCommunityname()){
                        row[0] = Cs2;
                        row[1] = Cs2.getHouseno();
                        row[2] = Cs2.getCommunity().getCommunityname();
                        m1.addRow(row);                        
                    }

                }
    
            }

        }
    }    
    public void popcity(){
    ComboBoxCity.removeAllItems();
    ComboBoxCity.addItem("");    
    
    for(City ct : mainSystem.getAllcities()){
          ComboBoxCity.addItem(ct.getCityname());
          System.out.println("CITIES ARE "+ ct.getCityname());
    }      
    }  
    public void popcity1(){
        ComboBoxCity1.removeAllItems();
        ComboBoxCity1.addItem("");    

        for(City ct : mainSystem.getAllcities()){
              ComboBoxCity1.addItem(ct.getCityname());
              System.out.println("CITIES ARE "+ ct.getCityname());
        }   
    }
    public void popcity2(String city){
    ComboBoxCity.removeAllItems(); 
    ComboBoxCity.addItem(city);  
    for(City ct : mainSystem.getAllcities()){
          if(ct.getCityname().equals(city)){
              System.out.println("NO");
          }else{
            ComboBoxCity.addItem(ct.getCityname());
            System.out.println("CITIES ARE "+ ct.getCityname());              
          }

    }
    }
    
    public void popcomm(){  
    ComboBoxComm.removeAllItems();
    ComboBoxComm .addItem("");
    for(City ct : mainSystem.getAllcities()){
        for(Community ct2 : ct.getAllcommunities()){
            ComboBoxComm .addItem(ct2.getCommunityname());   
        }
      }      
    }
  
    
}

